{"ast":null,"code":"import * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nlet warnedOnceNotValidView = false;\nexport function useViews(_ref) {\n  let {\n    onChange,\n    onViewChange,\n    openTo,\n    view: inView,\n    views,\n    autoFocus,\n    focusedView: inFocusedView,\n    onFocusedViewChange\n  } = _ref;\n  var _views, _views2;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnceNotValidView) {\n      if (inView != null && !views.includes(inView)) {\n        console.warn(`MUI: \\`view=\"${inView}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n      if (inView == null && openTo != null && !views.includes(openTo)) {\n        console.warn(`MUI: \\`openTo=\"${openTo}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n    }\n  }\n  const previousOpenTo = React.useRef(openTo);\n  const previousViews = React.useRef(views);\n  const defaultView = React.useRef(views.includes(openTo) ? openTo : views[0]);\n  const [view, setView] = useControlled({\n    name: 'useViews',\n    state: 'view',\n    controlled: inView,\n    default: defaultView.current\n  });\n  const defaultFocusedView = React.useRef(autoFocus ? view : null);\n  const [focusedView, setFocusedView] = useControlled({\n    name: 'useViews',\n    state: 'focusedView',\n    controlled: inFocusedView,\n    default: defaultFocusedView.current\n  });\n  React.useEffect(() => {\n    // Update the current view when `openTo` or `views` props change\n    if (previousOpenTo.current && previousOpenTo.current !== openTo || previousViews.current && previousViews.current.some(previousView => !views.includes(previousView))) {\n      setView(views.includes(openTo) ? openTo : views[0]);\n      previousViews.current = views;\n      previousOpenTo.current = openTo;\n    }\n  }, [openTo, setView, view, views]);\n  const viewIndex = views.indexOf(view);\n  const previousView = (_views = views[viewIndex - 1]) != null ? _views : null;\n  const nextView = (_views2 = views[viewIndex + 1]) != null ? _views2 : null;\n  const handleFocusedViewChange = useEventCallback((viewToFocus, hasFocus) => {\n    if (hasFocus) {\n      // Focus event\n      setFocusedView(viewToFocus);\n    } else {\n      // Blur event\n      setFocusedView(prevFocusedView => viewToFocus === prevFocusedView ? null : prevFocusedView // If false the blur is due to view switching\n      );\n    }\n\n    onFocusedViewChange == null ? void 0 : onFocusedViewChange(viewToFocus, hasFocus);\n  });\n  const handleChangeView = useEventCallback(newView => {\n    if (newView === view) {\n      return;\n    }\n    setView(newView);\n    handleFocusedViewChange(newView, true);\n    if (onViewChange) {\n      onViewChange(newView);\n    }\n  });\n  const goToNextView = useEventCallback(() => {\n    if (nextView) {\n      handleChangeView(nextView);\n    }\n    handleFocusedViewChange(nextView, true);\n  });\n  const setValueAndGoToNextView = useEventCallback((value, currentViewSelectionState, selectedView) => {\n    const isSelectionFinishedOnCurrentView = currentViewSelectionState === 'finish';\n    const hasMoreViews = selectedView ?\n    // handles case like `DateTimePicker`, where a view might return a `finish` selection state\n    // but we it's not the final view given all `views` -> overall selection state should be `partial`.\n    views.indexOf(selectedView) < views.length - 1 : Boolean(nextView);\n    const globalSelectionState = isSelectionFinishedOnCurrentView && hasMoreViews ? 'partial' : currentViewSelectionState;\n    onChange(value, globalSelectionState);\n    if (isSelectionFinishedOnCurrentView) {\n      goToNextView();\n    }\n  });\n  const setValueAndGoToView = useEventCallback((value, newView, selectedView) => {\n    onChange(value, newView ? 'partial' : 'finish', selectedView);\n    if (newView) {\n      handleChangeView(newView);\n      handleFocusedViewChange(newView, true);\n    }\n  });\n  return {\n    view,\n    setView: handleChangeView,\n    focusedView,\n    setFocusedView: handleFocusedViewChange,\n    nextView,\n    previousView,\n    defaultView: defaultView.current,\n    goToNextView,\n    setValueAndGoToNextView,\n    setValueAndGoToView\n  };\n}","map":{"version":3,"names":["React","useEventCallback","unstable_useControlled","useControlled","warnedOnceNotValidView","useViews","_ref","onChange","onViewChange","openTo","view","inView","views","autoFocus","focusedView","inFocusedView","onFocusedViewChange","_views","_views2","process","env","NODE_ENV","includes","console","warn","join","previousOpenTo","useRef","previousViews","defaultView","setView","name","state","controlled","default","current","defaultFocusedView","setFocusedView","useEffect","some","previousView","viewIndex","indexOf","nextView","handleFocusedViewChange","viewToFocus","hasFocus","prevFocusedView","handleChangeView","newView","goToNextView","setValueAndGoToNextView","value","currentViewSelectionState","selectedView","isSelectionFinishedOnCurrentView","hasMoreViews","length","Boolean","globalSelectionState","setValueAndGoToView"],"sources":["C:/Users/amankumar.mandal/MO/frontend/node_modules/@mui/x-date-pickers/internals/hooks/useViews.js"],"sourcesContent":["import * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nlet warnedOnceNotValidView = false;\nexport function useViews({\n  onChange,\n  onViewChange,\n  openTo,\n  view: inView,\n  views,\n  autoFocus,\n  focusedView: inFocusedView,\n  onFocusedViewChange\n}) {\n  var _views, _views2;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnceNotValidView) {\n      if (inView != null && !views.includes(inView)) {\n        console.warn(`MUI: \\`view=\"${inView}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n      if (inView == null && openTo != null && !views.includes(openTo)) {\n        console.warn(`MUI: \\`openTo=\"${openTo}\"\\` is not a valid prop.`, `It must be an element of \\`views=[\"${views.join('\", \"')}\"]\\`.`);\n        warnedOnceNotValidView = true;\n      }\n    }\n  }\n  const previousOpenTo = React.useRef(openTo);\n  const previousViews = React.useRef(views);\n  const defaultView = React.useRef(views.includes(openTo) ? openTo : views[0]);\n  const [view, setView] = useControlled({\n    name: 'useViews',\n    state: 'view',\n    controlled: inView,\n    default: defaultView.current\n  });\n  const defaultFocusedView = React.useRef(autoFocus ? view : null);\n  const [focusedView, setFocusedView] = useControlled({\n    name: 'useViews',\n    state: 'focusedView',\n    controlled: inFocusedView,\n    default: defaultFocusedView.current\n  });\n  React.useEffect(() => {\n    // Update the current view when `openTo` or `views` props change\n    if (previousOpenTo.current && previousOpenTo.current !== openTo || previousViews.current && previousViews.current.some(previousView => !views.includes(previousView))) {\n      setView(views.includes(openTo) ? openTo : views[0]);\n      previousViews.current = views;\n      previousOpenTo.current = openTo;\n    }\n  }, [openTo, setView, view, views]);\n  const viewIndex = views.indexOf(view);\n  const previousView = (_views = views[viewIndex - 1]) != null ? _views : null;\n  const nextView = (_views2 = views[viewIndex + 1]) != null ? _views2 : null;\n  const handleFocusedViewChange = useEventCallback((viewToFocus, hasFocus) => {\n    if (hasFocus) {\n      // Focus event\n      setFocusedView(viewToFocus);\n    } else {\n      // Blur event\n      setFocusedView(prevFocusedView => viewToFocus === prevFocusedView ? null : prevFocusedView // If false the blur is due to view switching\n      );\n    }\n\n    onFocusedViewChange == null ? void 0 : onFocusedViewChange(viewToFocus, hasFocus);\n  });\n  const handleChangeView = useEventCallback(newView => {\n    if (newView === view) {\n      return;\n    }\n    setView(newView);\n    handleFocusedViewChange(newView, true);\n    if (onViewChange) {\n      onViewChange(newView);\n    }\n  });\n  const goToNextView = useEventCallback(() => {\n    if (nextView) {\n      handleChangeView(nextView);\n    }\n    handleFocusedViewChange(nextView, true);\n  });\n  const setValueAndGoToNextView = useEventCallback((value, currentViewSelectionState, selectedView) => {\n    const isSelectionFinishedOnCurrentView = currentViewSelectionState === 'finish';\n    const hasMoreViews = selectedView ?\n    // handles case like `DateTimePicker`, where a view might return a `finish` selection state\n    // but we it's not the final view given all `views` -> overall selection state should be `partial`.\n    views.indexOf(selectedView) < views.length - 1 : Boolean(nextView);\n    const globalSelectionState = isSelectionFinishedOnCurrentView && hasMoreViews ? 'partial' : currentViewSelectionState;\n    onChange(value, globalSelectionState);\n    if (isSelectionFinishedOnCurrentView) {\n      goToNextView();\n    }\n  });\n  const setValueAndGoToView = useEventCallback((value, newView, selectedView) => {\n    onChange(value, newView ? 'partial' : 'finish', selectedView);\n    if (newView) {\n      handleChangeView(newView);\n      handleFocusedViewChange(newView, true);\n    }\n  });\n  return {\n    view,\n    setView: handleChangeView,\n    focusedView,\n    setFocusedView: handleFocusedViewChange,\n    nextView,\n    previousView,\n    defaultView: defaultView.current,\n    goToNextView,\n    setValueAndGoToNextView,\n    setValueAndGoToView\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}