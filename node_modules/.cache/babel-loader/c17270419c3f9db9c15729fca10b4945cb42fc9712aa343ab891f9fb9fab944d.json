{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"sx\"];\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useViews } from '../useViews';\nimport { isTimeView } from '../../utils/time-utils';\n\n/**\n * Props used to handle the views that are common to all pickers.\n */\n\n/**\n * Props used to handle the views of the pickers.\n */\n\n/**\n * Props used to handle the value of the pickers.\n */\n\n/**\n * Manage the views of all the pickers:\n * - Handles the view switch\n * - Handles the switch between UI views and field views\n * - Handles the focus management when switching views\n */\nexport const usePickerViews = _ref => {\n  let {\n    props,\n    propsFromPickerValue,\n    additionalViewProps,\n    inputRef,\n    autoFocusView\n  } = _ref;\n  const {\n    onChange,\n    open,\n    onSelectedSectionsChange,\n    onClose\n  } = propsFromPickerValue;\n  const {\n    views,\n    openTo,\n    onViewChange,\n    disableOpenPicker,\n    viewRenderers\n  } = props;\n  const propsToForwardToView = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    view,\n    setView,\n    defaultView,\n    focusedView,\n    setFocusedView,\n    setValueAndGoToNextView\n  } = useViews({\n    view: undefined,\n    views,\n    openTo,\n    onChange,\n    onViewChange,\n    autoFocus: autoFocusView\n  });\n  const {\n    hasUIView,\n    viewModeLookup\n  } = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    let viewMode;\n    if (disableOpenPicker) {\n      viewMode = 'field';\n    } else if (viewRenderers[viewForReduce] != null) {\n      viewMode = 'UI';\n    } else {\n      viewMode = 'field';\n    }\n    acc.viewModeLookup[viewForReduce] = viewMode;\n    if (viewMode === 'UI') {\n      acc.hasUIView = true;\n    }\n    return acc;\n  }, {\n    hasUIView: false,\n    viewModeLookup: {}\n  }), [disableOpenPicker, viewRenderers, views]);\n  const timeViewsCount = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    if (viewRenderers[viewForReduce] != null && isTimeView(viewForReduce)) {\n      return acc + 1;\n    }\n    return acc;\n  }, 0), [viewRenderers, views]);\n  const currentViewMode = viewModeLookup[view];\n  const shouldRestoreFocus = useEventCallback(() => currentViewMode === 'UI');\n  const [popperView, setPopperView] = React.useState(currentViewMode === 'UI' ? view : null);\n  if (popperView !== view && viewModeLookup[view] === 'UI') {\n    setPopperView(view);\n  }\n  useEnhancedEffect(() => {\n    if (currentViewMode === 'field' && open) {\n      onClose();\n      onSelectedSectionsChange('hours');\n      setTimeout(() => {\n        inputRef == null ? void 0 : inputRef.current.focus();\n      });\n    }\n  }, [view]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEnhancedEffect(() => {\n    if (!open) {\n      return;\n    }\n    let newView = view;\n\n    // If the current view is a field view, go to the last popper view\n    if (currentViewMode === 'field' && popperView != null) {\n      newView = popperView;\n    }\n\n    // If the current view is not the default view and both are UI views\n    if (newView !== defaultView && viewModeLookup[newView] === 'UI' && viewModeLookup[defaultView] === 'UI') {\n      newView = defaultView;\n    }\n    if (newView !== view) {\n      setView(newView);\n    }\n    setFocusedView(newView, true);\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const layoutProps = {\n    views,\n    view: popperView,\n    onViewChange: setView\n  };\n  return {\n    hasUIView,\n    shouldRestoreFocus,\n    layoutProps,\n    renderCurrentView: () => {\n      if (popperView == null) {\n        return null;\n      }\n      const renderer = viewRenderers[popperView];\n      if (renderer == null) {\n        return null;\n      }\n      return renderer(_extends({}, propsToForwardToView, additionalViewProps, propsFromPickerValue, {\n        views,\n        onChange: setValueAndGoToNextView,\n        view: popperView,\n        onViewChange: setView,\n        focusedView,\n        onFocusedViewChange: setFocusedView,\n        showViewSwitcher: timeViewsCount > 1,\n        timeViewsCount\n      }));\n    }\n  };\n};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useEnhancedEffect","useEventCallback","useViews","isTimeView","usePickerViews","_ref","props","propsFromPickerValue","additionalViewProps","inputRef","autoFocusView","onChange","open","onSelectedSectionsChange","onClose","views","openTo","onViewChange","disableOpenPicker","viewRenderers","propsToForwardToView","view","setView","defaultView","focusedView","setFocusedView","setValueAndGoToNextView","undefined","autoFocus","hasUIView","viewModeLookup","useMemo","reduce","acc","viewForReduce","viewMode","timeViewsCount","currentViewMode","shouldRestoreFocus","popperView","setPopperView","useState","setTimeout","current","focus","newView","layoutProps","renderCurrentView","renderer","onFocusedViewChange","showViewSwitcher"],"sources":["C:/Users/amankumar.mandal/MO/frontend/node_modules/@mui/x-date-pickers/internals/hooks/usePicker/usePickerViews.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"sx\"];\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useViews } from '../useViews';\nimport { isTimeView } from '../../utils/time-utils';\n\n/**\n * Props used to handle the views that are common to all pickers.\n */\n\n/**\n * Props used to handle the views of the pickers.\n */\n\n/**\n * Props used to handle the value of the pickers.\n */\n\n/**\n * Manage the views of all the pickers:\n * - Handles the view switch\n * - Handles the switch between UI views and field views\n * - Handles the focus management when switching views\n */\nexport const usePickerViews = ({\n  props,\n  propsFromPickerValue,\n  additionalViewProps,\n  inputRef,\n  autoFocusView\n}) => {\n  const {\n    onChange,\n    open,\n    onSelectedSectionsChange,\n    onClose\n  } = propsFromPickerValue;\n  const {\n    views,\n    openTo,\n    onViewChange,\n    disableOpenPicker,\n    viewRenderers\n  } = props;\n  const propsToForwardToView = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    view,\n    setView,\n    defaultView,\n    focusedView,\n    setFocusedView,\n    setValueAndGoToNextView\n  } = useViews({\n    view: undefined,\n    views,\n    openTo,\n    onChange,\n    onViewChange,\n    autoFocus: autoFocusView\n  });\n  const {\n    hasUIView,\n    viewModeLookup\n  } = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    let viewMode;\n    if (disableOpenPicker) {\n      viewMode = 'field';\n    } else if (viewRenderers[viewForReduce] != null) {\n      viewMode = 'UI';\n    } else {\n      viewMode = 'field';\n    }\n    acc.viewModeLookup[viewForReduce] = viewMode;\n    if (viewMode === 'UI') {\n      acc.hasUIView = true;\n    }\n    return acc;\n  }, {\n    hasUIView: false,\n    viewModeLookup: {}\n  }), [disableOpenPicker, viewRenderers, views]);\n  const timeViewsCount = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    if (viewRenderers[viewForReduce] != null && isTimeView(viewForReduce)) {\n      return acc + 1;\n    }\n    return acc;\n  }, 0), [viewRenderers, views]);\n  const currentViewMode = viewModeLookup[view];\n  const shouldRestoreFocus = useEventCallback(() => currentViewMode === 'UI');\n  const [popperView, setPopperView] = React.useState(currentViewMode === 'UI' ? view : null);\n  if (popperView !== view && viewModeLookup[view] === 'UI') {\n    setPopperView(view);\n  }\n  useEnhancedEffect(() => {\n    if (currentViewMode === 'field' && open) {\n      onClose();\n      onSelectedSectionsChange('hours');\n      setTimeout(() => {\n        inputRef == null ? void 0 : inputRef.current.focus();\n      });\n    }\n  }, [view]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEnhancedEffect(() => {\n    if (!open) {\n      return;\n    }\n    let newView = view;\n\n    // If the current view is a field view, go to the last popper view\n    if (currentViewMode === 'field' && popperView != null) {\n      newView = popperView;\n    }\n\n    // If the current view is not the default view and both are UI views\n    if (newView !== defaultView && viewModeLookup[newView] === 'UI' && viewModeLookup[defaultView] === 'UI') {\n      newView = defaultView;\n    }\n    if (newView !== view) {\n      setView(newView);\n    }\n    setFocusedView(newView, true);\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const layoutProps = {\n    views,\n    view: popperView,\n    onViewChange: setView\n  };\n  return {\n    hasUIView,\n    shouldRestoreFocus,\n    layoutProps,\n    renderCurrentView: () => {\n      if (popperView == null) {\n        return null;\n      }\n      const renderer = viewRenderers[popperView];\n      if (renderer == null) {\n        return null;\n      }\n      return renderer(_extends({}, propsToForwardToView, additionalViewProps, propsFromPickerValue, {\n        views,\n        onChange: setValueAndGoToNextView,\n        view: popperView,\n        onViewChange: setView,\n        focusedView,\n        onFocusedViewChange: setFocusedView,\n        showViewSwitcher: timeViewsCount > 1,\n        timeViewsCount\n      }));\n    }\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}