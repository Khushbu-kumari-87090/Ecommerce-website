[{"C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\index.js":"1","C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\App.jsx":"3","C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\header\\header.jsx":"4","C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\pages\\register\\register.jsx":"5","C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\pages\\login\\MSLogin.jsx":"6"},{"size":579,"mtime":1686822417377,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1684902816000,"results":"9","hashOfConfig":"8"},{"size":489,"mtime":1686822864797,"results":"10","hashOfConfig":"8"},{"size":1075,"mtime":1685200204000,"results":"11","hashOfConfig":"8"},{"size":13578,"mtime":1686822946298,"results":"12","hashOfConfig":"8"},{"size":5994,"mtime":1686823657255,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bl4byp",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\index.js",[],[],"C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\App.jsx",["37","38"],[],"import './App.css';\nimport {Route,Routes,useLocation} from \"react-router-dom\";\nimport MSLogin from './pages/login/MSLogin';\nimport MSRegister from './pages/register/register';\nimport Header from \"./header/header\";\n\nfunction App() {\n\n  return (\n    \n    <div className=\"App\">\n    \n      <Routes>\n        <Route path=\"/login\" element={<MSLogin />}></Route>\n        <Route path=\"/register\" element={<MSRegister />}></Route>\n      </Routes>\n    </div>  \n  );\n}\n\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n","C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\header\\header.jsx",["39","40","41","42","43"],[],"import React, { useState, useLocation } from \"react\";\r\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport \"./header.css\";\r\n\r\n\r\nfunction Header2(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // console.log(props.userName);\r\n    // console.log(props);\r\n\r\n    const handleChange = () => {\r\n        navigate('/walletConnection', { state: props.userName });\r\n    };\r\n    return (\r\n\r\n        <div className=\"topnav\">\r\n            <div className=\"topnavLeft\">\r\n                <img className=\"logoimg\" src=\"..\"></img>\r\n            </div>\r\n            <div className=\"topnavRight\" >\r\n                <ul>\r\n                    <li>\r\n                        <AccountCircleIcon className=\"icon\"></AccountCircleIcon>\r\n                        <a href=\"#news\">  {props.userName}</a>\r\n                    </li>\r\n\r\n                    <li><button onClick={handleChange}>Log Out</button></li>\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header2;\r\n","C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\pages\\register\\register.jsx",["44","45","46","47","48","49","50","51","52","53","54","55","56","57"],[],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { BrowserRouter, Route, useNavigate } from 'react-router-dom';\r\n// import {useRouterHistory} from 'react-router';\r\nimport axios from 'axios';\r\nimport { useForm } from 'react-hook-form';\r\nimport Alert from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n// import MuiAlert, { AlertProps } from '@mui/material/Alert';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Input from '@mui/material/Input';\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport './register.css';\r\n\r\nfunction MSRegister() {\r\n\r\n    const [showPassword1, setShowPassword1] = useState(false);\r\n    const [showPassword2, setShowPassword2] = useState(false);\r\n    const [role, setRole] = useState([]);\r\n    const [responseMsg, setResponseMsg] = useState();\r\n    const [open, setOpen] = useState(false);\r\n    const [vendorId, setVendorId] = useState();\r\n    let country = [\"India\", \"USA\", \"Germany\", \"Russia\", \"UAE\"];\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors }, } = useForm();\r\n\r\n    const handleClickShowPassword = (val) => {\r\n        if (val === \"1\")\r\n            return (event) => { setShowPassword1((show) => !show); }\r\n        if (val === \"2\")\r\n            return (event) => { setShowPassword2((show) => !show); }\r\n\r\n    }\r\n\r\n    const handlemsuseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        // navigate(\"\");\r\n        // api call\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className='ms-main-page'>\r\n            <div className='ms-main-page-coat ms-flex-col'>\r\n                <div className='ms-register-sub-div ms-flex-col'>\r\n                    <div className='ms-register-head'>\r\n                        <h2 className='ms-login-head'>Create your profile</h2>\r\n                        <h3 className='ms-login-logo'>\r\n                            MyStore\r\n                        </h3>\r\n                    </div>\r\n\r\n                    <form onSubmit={handleSubmit(onSubmit)} className='ms-register-form'>\r\n                        <div className='ms-register-head'>\r\n\r\n                            <div className='ms-register-form-sub-div form-start' >\r\n                                {errors.userName ?\r\n                                    <TextField error className='ms-login-field ' sx={{ minWidth: '27ch' }} id=\"standard-required\" label=\"*User Name\" variant=\"standard\" {...register('userName', { required: true })} helperText=\"User Name is required.\" /> :\r\n                                    <TextField className='ms-login-field ms-field-margin-bottom' sx={{ minWidth: '27ch' }} id=\"standard-required\" label=\"User Name\" variant=\"standard\" {...register('userName', { required: true })} />\r\n\r\n                                }\r\n                                {errors.email ?\r\n                                    <TextField error className='ms-login-field ms-field-margin' sx={{ minWidth: '27ch' }} id=\"outlined-error-helper-text\" label=\"Email\" variant=\"standard\"\r\n\r\n                                        {...register('email', { required: true, pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i })}\r\n                                        helperText=\"Enter valid email address.\"\r\n                                    /> :\r\n                                    <TextField className='ms-login-field ms-field-margin ms-field-margin-bottom' sx={{ minWidth: '27ch' }} id=\"outlined-basic\" label=\"Email\" variant=\"standard\"\r\n                                        {...register('email', { required: true, pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i })}\r\n                                    />\r\n\r\n                                }\r\n\r\n                                <FormControl className='ms-login-field ms-field-margin ms-field-margin-bottom' variant=\"standard\">\r\n                                    {errors.password ? <InputLabel error htmlFor=\"standard-error-adornment-password\">*Password</InputLabel> : <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>}\r\n                                    <Input\r\n\r\n                                        id=\"standard-adornment-password\"\r\n                                        type={showPassword1 ? 'text' : 'password'}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onmsuseDown={handlemsuseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword1 ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Password\"\r\n                                        {...register('password', {\r\n                                            required: true,\r\n                                            validate: (val) => {\r\n                                                if (val.length < 8) {\r\n                                                    console.log(watch('password'));\r\n                                                    return \"Password should be of length 8 or above.\";\r\n                                                }\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                    {errors.password ? <FormHelperText error id=\"outlined-weight-helper-text\">Password should be of length 8 or above.</FormHelperText> : \"\"}\r\n                                </FormControl>\r\n                                <FormControl className='ms-login-field ms-field-margin' variant=\"standard\">\r\n                                    {errors.confirmPassword ? <InputLabel error htmlFor=\"standard-error-adornment-confirm-password\">Confirm Password</InputLabel> : <InputLabel htmlFor=\"standard-adornment-confirm-password\">Confirm Password</InputLabel>}\r\n                                    <Input\r\n\r\n                                        id=\"standard-adornment-confirm-password\"\r\n                                        type={showPassword2 ? 'text' : 'password'}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword(\"2\")}\r\n                                                    onmsuseDown={handlemsuseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword2 ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Confirm Password\"\r\n                                        {...register('confirmPassword', {\r\n                                            required: true,\r\n                                            validate: (val) => {\r\n                                                if (watch('password') !== val) {\r\n                                                    return \"Your passwords does not match\";\r\n                                                }\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                    {errors.confirmPassword ? <FormHelperText error id=\"standard-weight-helper-text\">Password does not matched!</FormHelperText> : \"\"}\r\n\r\n                                </FormControl>\r\n\r\n                            </div>\r\n\r\n                            <div className='ms-register-form-sub-div form-end'>\r\n\r\n                                {/* <TextField className='userName' sx={{ minWidth: '27ch' }} id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" onChange={handleUserName} /> */}\r\n\r\n                                <FormControl className='register-radio'>\r\n                                    <FormLabel id=\"dems-controlled-radio-buttons-group\">I'm a/an :</FormLabel>\r\n                                    <RadioGroup\r\n                                        defaultValue=\"client\"\r\n                                        aria-labelledby=\"dems-controlled-radio-buttons-group\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        // value={value}\r\n                                        // onChange={handleChange}\r\n                                        {...register('role', { required: true })}\r\n                                    >\r\n                                        <FormControlLabel value=\"client\" control={<Radio />} label=\"Client or Organisation\" />\r\n                                        <FormControlLabel value=\"agency\" control={<Radio />} label=\"Agency or Provider\" />\r\n                                        <FormControlLabel value=\"freelancer\" control={<Radio />} label=\"Freelancer or Contributor\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n\r\n                                <FormControl className='ms-login-field register-select ms-field-margin-bottom' sx={{ minWidth: '27ch' }} variant=\"standard\" >\r\n                                    <InputLabel id=\"dems-simple-select-standard-label\">Country</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"dems-simple-select-standard-label\"\r\n                                        id=\"dems-simple-select-standard\"\r\n                                        defaultValue=\"India\"\r\n                                        // onChange={handleChange}\r\n                                        {...register('country', { required: true })}\r\n                                        label=\"Country\"\r\n                                    >\r\n                                        {country.map((cntry) => { return (<MenuItem value={cntry}>{cntry}</MenuItem>); })}\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                                {errors.phone ?\r\n                                    <TextField error className='ms-login-field' sx={{ minWidth: '27ch' }} id=\"outlined-error-helper-text\" label=\"Phone\" variant=\"standard\"\r\n                                        {...register('phone', { required: true, pattern: /^\\d{10}$/ })}\r\n                                        helperText=\"Enter valid phone number.\"\r\n                                    /> :\r\n                                    <TextField className='ms-login-field ms-field-margin' sx={{ minWidth: '27ch' }} id=\"outlined-basic\" label=\"Phone\" variant=\"standard\"\r\n                                        {...register('phone', { required: true, pattern: /^\\d{10}$/ })}\r\n                                    />\r\n\r\n                                }\r\n                            </div>\r\n\r\n                            {open === true && <Alert className='loginAlert' onClose={handleClose} severity=\"error\" >\r\n                                {responseMsg}\r\n                            </Alert>}\r\n\r\n                            {/* <p className='SignUpFlip' onClick={handleCss}>SIGN UP</p> */}\r\n\r\n                        </div>\r\n                        <Button type='submit' className='ms-signin-button register-button-margin' variant='outlined' >Sign Up</Button>\r\n                    </form>\r\n\r\n                    <p className='ms-login-para'>Already a member? <span className='ms-login-signup-button' onClick={() => navigate('/login')} >Login!</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MSRegister;\r\n","C:\\Users\\amankumar.mandal\\MO\\frontend\\src\\pages\\login\\MSLogin.jsx",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73"],[],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { BrowserRouter, Route, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useForm } from 'react-hook-form';\r\nimport Alert from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport Button from '@mui/material/Button';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Input from '@mui/material/Input';\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport './MSLogin.css';\r\n\r\nfunction MSLogin() {\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [role, setRole] = useState([]);\r\n    const [responseMsg, setResponseMsg] = useState();\r\n    const [open, setOpen] = useState(false);\r\n    const [vendorId, setVendorId] = useState();\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors }, } = useForm();\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handlemsuseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        // navigate(\"\");\r\n        // api call\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className='ms-main-page'>\r\n            <div className='ms-main-page-coat ms-flex-col'>\r\n                <div className='ms-sub-div ms-flex-col'>\r\n                    <h3 className='ms-login-logo'>\r\n                        MyStore\r\n                    </h3>\r\n                    <h2 className='ms-login-head'>WELCOME!</h2>\r\n\r\n                    <form onSubmit={handleSubmit(onSubmit)} className='ms-form ms-flex-col'>\r\n\r\n                        {errors.userName ?\r\n                            <TextField error className='ms-login-field ms-field-margin' sx={{ minWidth: '27ch' }} id=\"standard-required\" label=\"*User Name\" variant=\"standard\" {...register('userName', { required: true })} helperText=\"User Name is required.\" /> :\r\n                            <TextField className='ms-login-field ms-field-margin' sx={{ minWidth: '27ch' }} id=\"standard-required\" label=\"User Name\" variant=\"standard\" {...register('userName', { required: true })} />\r\n\r\n                        }\r\n                        {/* <TextField className='userName' sx={{ minWidth: '27ch' }} id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" onChange={handleUserName} /> */}\r\n                        <FormControl className='ms-login-field ms-field-margin' variant=\"standard\">\r\n                            {errors.password ? <InputLabel error htmlFor=\"standard-error-adornment-password\">*Password</InputLabel> : <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>}\r\n                            <Input\r\n                                \r\n                                id=\"standard-adornment-password\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onmsuseDown={handlemsuseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                {...register('password', {\r\n                                    required: true,\r\n                                    validate: (val) => {\r\n                                        if (val.length < 8) {\r\n                                            console.log(watch('password'));\r\n                                            return \"Password should be of length 8 or above.\";\r\n                                        }\r\n                                    },\r\n                                })}\r\n                            />\r\n                            {errors.password ? <FormHelperText error id=\"outlined-weight-helper-text\">Password should be of length 8 or above.</FormHelperText> : \"\"}\r\n                        </FormControl>\r\n                        {open === true && <Alert className='loginAlert' onClose={handleClose} severity=\"error\" >\r\n                            {responseMsg}\r\n                        </Alert>}\r\n\r\n                        <Button type='submit' className='ms-signin-button ms-field-margin' variant='outlined' >SIGN IN</Button>\r\n\r\n                        {/* <p className='SignUpFlip' onClick={handleCss}>SIGN UP</p> */}\r\n\r\n                    </form>\r\n                    <p className='ms-login-para'>New here? <span className='ms-login-signup-button' onClick={()=>navigate('/register')} >SignUp!</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MSLogin;\r\n",{"ruleId":"74","severity":1,"message":"75","line":2,"column":22,"nodeType":"76","messageId":"77","endLine":2,"endColumn":33},{"ruleId":"74","severity":1,"message":"78","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":14},{"ruleId":"74","severity":1,"message":"79","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":38},{"ruleId":"74","severity":1,"message":"80","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":15},{"ruleId":"74","severity":1,"message":"81","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":21,"column":17,"nodeType":"84","endLine":21,"endColumn":51},{"ruleId":"74","severity":1,"message":"85","line":1,"column":38,"nodeType":"76","messageId":"77","endLine":1,"endColumn":48},{"ruleId":"74","severity":1,"message":"86","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":23},{"ruleId":"74","severity":1,"message":"80","line":2,"column":25,"nodeType":"76","messageId":"77","endLine":2,"endColumn":30},{"ruleId":"74","severity":1,"message":"87","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},{"ruleId":"74","severity":1,"message":"88","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":16},{"ruleId":"74","severity":1,"message":"89","line":18,"column":18,"nodeType":"76","messageId":"77","endLine":18,"endColumn":35},{"ruleId":"74","severity":1,"message":"90","line":22,"column":8,"nodeType":"76","messageId":"77","endLine":22,"endColumn":19},{"ruleId":"74","severity":1,"message":"91","line":23,"column":8,"nodeType":"76","messageId":"77","endLine":23,"endColumn":21},{"ruleId":"74","severity":1,"message":"92","line":33,"column":12,"nodeType":"76","messageId":"77","endLine":33,"endColumn":16},{"ruleId":"74","severity":1,"message":"93","line":33,"column":18,"nodeType":"76","messageId":"77","endLine":33,"endColumn":25},{"ruleId":"74","severity":1,"message":"94","line":34,"column":25,"nodeType":"76","messageId":"77","endLine":34,"endColumn":39},{"ruleId":"74","severity":1,"message":"95","line":36,"column":12,"nodeType":"76","messageId":"77","endLine":36,"endColumn":20},{"ruleId":"74","severity":1,"message":"96","line":36,"column":22,"nodeType":"76","messageId":"77","endLine":36,"endColumn":33},{"ruleId":"74","severity":1,"message":"97","line":52,"column":11,"nodeType":"76","messageId":"77","endLine":52,"endColumn":22},{"ruleId":"74","severity":1,"message":"85","line":1,"column":38,"nodeType":"76","messageId":"77","endLine":1,"endColumn":48},{"ruleId":"74","severity":1,"message":"86","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":23},{"ruleId":"74","severity":1,"message":"80","line":2,"column":25,"nodeType":"76","messageId":"77","endLine":2,"endColumn":30},{"ruleId":"74","severity":1,"message":"87","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":13},{"ruleId":"74","severity":1,"message":"88","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":16},{"ruleId":"74","severity":1,"message":"98","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":16},{"ruleId":"74","severity":1,"message":"99","line":12,"column":8,"nodeType":"76","messageId":"77","endLine":12,"endColumn":14},{"ruleId":"74","severity":1,"message":"89","line":12,"column":18,"nodeType":"76","messageId":"77","endLine":12,"endColumn":35},{"ruleId":"74","severity":1,"message":"90","line":16,"column":8,"nodeType":"76","messageId":"77","endLine":16,"endColumn":19},{"ruleId":"74","severity":1,"message":"91","line":17,"column":8,"nodeType":"76","messageId":"77","endLine":17,"endColumn":21},{"ruleId":"74","severity":1,"message":"92","line":26,"column":12,"nodeType":"76","messageId":"77","endLine":26,"endColumn":16},{"ruleId":"74","severity":1,"message":"93","line":26,"column":18,"nodeType":"76","messageId":"77","endLine":26,"endColumn":25},{"ruleId":"74","severity":1,"message":"94","line":27,"column":25,"nodeType":"76","messageId":"77","endLine":27,"endColumn":39},{"ruleId":"74","severity":1,"message":"95","line":29,"column":12,"nodeType":"76","messageId":"77","endLine":29,"endColumn":20},{"ruleId":"74","severity":1,"message":"96","line":29,"column":22,"nodeType":"76","messageId":"77","endLine":29,"endColumn":33},{"ruleId":"74","severity":1,"message":"97","line":38,"column":11,"nodeType":"76","messageId":"77","endLine":38,"endColumn":22},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'BrowserRouter' is defined but never used.","'axios' is defined but never used.","'Snackbar' is defined but never used.","'SelectChangeEvent' is defined but never used.","'FilledInput' is defined but never used.","'OutlinedInput' is defined but never used.","'role' is assigned a value but never used.","'setRole' is assigned a value but never used.","'setResponseMsg' is assigned a value but never used.","'vendorId' is assigned a value but never used.","'setVendorId' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used."]